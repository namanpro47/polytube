{"version":3,"sources":["../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js"],"names":["module","exports","hookCallback","some","hooks","apply","arguments","isArray","input","Array","Object","prototype","toString","call","isObject","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","length","push","hasOwnProp","a","b","hasOwnProperty","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","fun","t","this","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","key","slice","join","Error","stack","keys","deprecations","deprecateSimple","name","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","set","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","func","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","indexOf","getSetYear","makeGetSet","keepTime","set$1","get","month","date","daysInMonth","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","e","code","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","result","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","second","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","baseIsEqual","__webpack_require__","Stack","equalArrays","equalByTag","equalObjects","getTag","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","object","bitmask","customizer","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","splice","pop","ListCache","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","type","setCacheAdd","setCacheHas","SetCache","predicate","cache","Uint8Array","eq","mapToArray","setToArray","COMPARE_UNORDERED_FLAG","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","convert","isPartial","stacked","getAllKeys","objProps","objLength","skipCtor","objValue","othValue","compared","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isArguments","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","iteratee","baseGetTag","isObjectLike","isLength","typedArrayTags","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","srcValue","isStrictComparable","hasIn","isKey","toKey","path","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","castPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","inverse","bool","color","body","outline","className","cssModule","innerRef","oneOfType","Card","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeSelf","self","root","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","error","getCurrentDatasets","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","current","point","pid","otherProps","rest","update","_props2","node","destroy","render","_props3","id","onClick","Component","isRequired","arrayOf","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","webpackPolyfill","paths","children","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","delta","reverseKeywords","JSON","stringify","z","xyz","t1","t2","t3","hi","f","p","q","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","pair","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","scale","num","str","Color","valid","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","spaces","maxes","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","parse","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","common","steps","UNITS","sorter","arrayUnique","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","adapter","_adapter","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","majorTicksEnabled","first","determineStepSize","scale_time","adapters","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","stackClear","stackDelete","stackGet","stackHas","stackSet","asyncTag","funcTag","genTag","proxyTag","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othIndex","baseIsArguments","stubFalse","Buffer","reIsUint","baseIsTypedArray","baseUnary","nodeIsTypedArray"],"mappings":"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","file":"static/js/2.e3a6d459.chunk.js","sourcesContent":["//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;"],"sourceRoot":""}