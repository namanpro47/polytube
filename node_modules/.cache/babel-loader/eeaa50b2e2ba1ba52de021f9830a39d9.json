{"ast":null,"code":"'use strict';\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function');\n\nvar bind = require('../internals/bind-context');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar getMapIterator = require('../internals/get-map-iterator'); // `Map.prototype.mapValues` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  mapValues: function mapValues(callbackfn\n  /* , thisArg */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var newMap = new (speciesConstructor(map, getBuiltIn('Map')))();\n    var setter = aFunction(newMap.set);\n    var step, entry, key;\n\n    while (!(step = iterator.next()).done) {\n      entry = step.value;\n      setter.call(newMap, key = entry[0], boundFunction(entry[1], key, map));\n    }\n\n    return newMap;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}