{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object');\n\nvar bind = require('../internals/bind-context');\n\nvar getMapIterator = require('../internals/get-map-iterator'); // `Map.prototype.find` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  find: function find(callbackfn\n  /* , thisArg */\n  ) {\n    var map = anObject(this);\n    var iterator = getMapIterator(map);\n    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var step, entry, value;\n\n    while (!(step = iterator.next()).done) {\n      entry = step.value;\n      if (boundFunction(value = entry[1], entry[0], map)) return value;\n    }\n  }\n});","map":null,"metadata":{},"sourceType":"script"}