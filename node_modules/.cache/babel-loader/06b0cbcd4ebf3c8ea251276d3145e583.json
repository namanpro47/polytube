{"ast":null,"code":"var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\n\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\n\nvar has = require('../internals/has');\n\nvar isObject = require('../internals/is-object');\n\nvar anObject = require('../internals/an-object'); // `Reflect.get` method\n// https://tc39.github.io/ecma262/#sec-reflect.get\n\n\nfunction get(target, propertyKey\n/* , receiver */\n) {\n  var receiver = arguments.length < 3 ? target : arguments[2];\n  var descriptor, prototype;\n  if (anObject(target) === receiver) return target[propertyKey];\n  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value') ? descriptor.value : descriptor.get === undefined ? undefined : descriptor.get.call(receiver);\n  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);\n}\n\nrequire('../internals/export')({\n  target: 'Reflect',\n  stat: true\n}, {\n  get: get\n});","map":null,"metadata":{},"sourceType":"script"}