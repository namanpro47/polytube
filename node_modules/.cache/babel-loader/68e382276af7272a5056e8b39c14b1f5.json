{"ast":null,"code":"'use strict';\n\nvar anObject = require('../internals/an-object');\n\nvar aFunction = require('../internals/a-function'); // `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n\n\nrequire('../internals/export')({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: require('../internals/is-pure')\n}, {\n  update: function update(key, callback\n  /* , thunk */\n  ) {\n    var map = anObject(this);\n    aFunction(callback);\n    var isPresentInMap = map.has(key);\n\n    if (!isPresentInMap && arguments.length < 3) {\n      throw TypeError('Updating absent value');\n    }\n\n    var value = isPresentInMap ? map.get(key) : aFunction(arguments[2])(key, map);\n    map.set(key, callback(value, key, map));\n    return map;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}